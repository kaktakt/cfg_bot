import telebot
import requests
from bs4 import BeautifulSoup
from dotenv import load_dotenv
import os
from datetime import datetime

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –ß—Ç–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ —Ñ–∞–π–ª–∞ .env
token = os.getenv("TOKEN")

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
users_file = 'users_sub.txt'
# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –æ—Ç–∑—ã–≤–∞–º–∏
reviews_file = 'reviews.txt'

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
subscribed_users = []

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot(token)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    if user_id in subscribed_users:
        bot.reply_to(message, 'üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ /rev\n\nüìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ /help')
    else:
        bot.send_message(chat_id, '–ü—Ä–∏–≤–µ—Ç–∏–∫!, —á—Ç–æ –±—ã —Å–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è ü•∫\n\nüìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ /help')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def help(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    if user_id in subscribed_users:
        bot.reply_to(message, 'üì• –°–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥ - /Download\nüìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞ - /insc\n\nüìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ /rev\nüóíÔ∏è –û—Ç–∑—ã–≤—ã /rev_list\n\nüîß –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞ - /fix')
    else:
        bot.send_message(chat_id, 'üßæ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è - /ok\nüóíÔ∏è –û—Ç–∑—ã–≤—ã /rev_list\n\nüîß –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞ - /fix')

@bot.message_handler(commands=['ok'])
def subscribe(message):
    user_id = message.from_user.id
    if user_id not in subscribed_users:
        subscribed_users.append(user_id)
        with open(users_file, 'a') as file:
            file.write(str(user_id) + '\n')
        bot.reply_to(message, 'üíú –°–ø–∞—Å–∏–±–∫–∏ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!\nüì• –°–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥ –ë—Ä—É—Å–Ω–∏—á–∫–∏ /Download')
        bot.send_message(message.chat.id, '[–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª](https://t.me/brusnikaone).', parse_mode='Markdown')
    else:
        bot.send_message(message.chat.id, '–¢—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω(–∞) ü•∞')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ne_ok
@bot.message_handler(commands=['ne_ok'])
def unsubscribe(message):
    user_id = message.from_user.id
    if user_id in subscribed_users:
        subscribed_users.remove(user_id)
        with open(users_file, 'r') as file:
            lines = file.readlines()
        with open(users_file, 'w') as file:
            for line in lines:
                if line.strip() != str(user_id):
                    file.write(line)
        bot.reply_to(message, 'üò¢ –¢—ã –æ—Ç–ø–∏—Å–∞–ª—Å—è(–∞—Å—å)')
    else:
        bot.reply_to(message, 'üòï –¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω(–∞)')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /Download
@bot.message_handler(commands=['Download'])
def send_cfg(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    if user_id in subscribed_users:
        if os.path.exists('config.zip'):
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞
            file_modified = os.path.getmtime('config.zip')
            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
            file_date = datetime.fromtimestamp(file_modified).strftime('%d.%b')
            bot.send_document(chat_id, open('config.zip', 'rb'), caption=f'L.UPD: {file_date}\n\nüóÉÔ∏è –ö–æ–Ω—Ñ–∏–≥ –≤ –∞—Ä—Ö–∏–≤–µ.\n‚ùî –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.\n       —Å–º–æ—Ç—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é. /insc')
        else:
            bot.send_message(chat_id, 'üôÅ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ–Ω—Ñ–∏–≥ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ, –æ–∂–∏–¥–∞–π—Ç–µ...')
    else:
        bot.send_message(chat_id, '–î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è ü•∫\n–ö–æ–º–∞–Ω–¥–∞ /ok')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /insc
@bot.message_handler(commands=['insc'])
def send_instruction(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    if user_id in subscribed_users:
        bot.send_document(chat_id, open('instruction.txt', 'rb'), caption='–ß–∏—Ç–∞–π—Ç–µ –í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û ‚ùóÔ∏è')
    else:
        bot.send_message(chat_id, '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è ü•∫\n–ö–æ–º–∞–Ω–¥–∞ /ok')

def save_subscribed_users():
    with open('users_sub.txt', 'w') as file:
        for user_id in subscribed_users:
            file.write(str(user_id) + '\n')

def load_subscribed_users():
    try:
        with open('users_sub.txt', 'r') as file:
            for line in file:
                if line.strip():
                    user_id = int(line.strip())
                    subscribed_users.append(user_id)
    except FileNotFoundError:
        pass

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /fix
@bot.message_handler(commands=['fix'])
def tech_support(message):
    user_id = message.from_user.id
    bot.send_message(user_id, '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ [–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É](t.me/myp_official)', parse_mode='Markdown')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
def send_message_to_subscribers(message_text):
    for user_id in subscribed_users:
        chat_member = bot.get_chat_member(chat_id, user_id)
        if chat_member.status not in ['left', 'kicked']:
            bot.send_message(user_id, message_text)

# —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–º–∞–Ω–¥—ã /snd_all
@bot.message_handler(commands=['snd'])
def send_to_all(message):
    if message.from_user.id == YOU_CHAT_ID:
        message_text = message.text.replace('/snd', '')
        if message_text:
            send_message_to_subscribers(message_text)
            bot.reply_to(message, '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.')
        else:
            bot.reply_to(message, '–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ.')
    else:
        bot.reply_to(message, '‚õîÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç.')

def send_message_to_subscribers(message_text):
    for user_id in subscribed_users:
        if user_id != 1132585602:
            bot.send_message(user_id, message_text)

# —Å—á–µ—Ç—á–∏–∫ –ø–æ–¥–ø–∏—Å–æ–∫
@bot.message_handler(commands=['sids'])
def scored_users(message):
    with open("users_sub.txt", 'r') as fp:
        lines = [line.strip() for line in fp if line.strip()]
        count = len(lines)
        if message.from_user.id == YOU_CHAT_ID:
            bot.reply_to(message, f"–ö–æ–ª-–≤–æ —è–≥–æ–¥–æ–∫: {count}")
        else:
            bot.reply_to(message, '‚õîÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç.')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /rev
@bot.message_handler(commands=['rev'])
def add_review(message):
    user_id = message.from_user.id
    username = message.from_user.username
    if user_id in subscribed_users:
        review_text = message.text.replace('/rev', '')
        if review_text:
            with open(reviews_file, 'a') as file:
                file.write(f'–û—Ç–∑—ã–≤ –æ—Ç {username}:\n{review_text}\n\n')
            bot.reply_to(message, 'üíú –°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –æ—Ç–∑—ã–≤ –æ –∫–æ–Ω—Ñ–∏–≥–µ!')
        else:
            bot.reply_to(message, 'üìù –ß—Ç–æ –±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞–ø–∏—à–∏—Ç–µ: /rev —Ç—É—Ç –≤–∞—à –æ—Ç–∑—ã–≤')
    else:
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è ü•∫\n–ö–æ–º–∞–Ω–¥–∞ /ok')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /rev_list
@bot.message_handler(commands=['rev_list'])
def show_reviews(message):
    with open(reviews_file, 'r') as file:
        reviews = file.read()
        if reviews:
            bot.send_message(message.chat.id, "üóíÔ∏è –û—Ç–∑—ã–≤—ã:\n\n" + reviews)
        else:
            bot.send_message(message.chat.id, "‚òπÔ∏è –û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")

def load_reviews():
    try:
        with open(reviews_file, 'r') as file:
            pass
    except FileNotFoundError:
        with open(reviews_file, 'w') as file:
            pass

# checker
@bot.message_handler(commands=['/'])
def check(message):
    if message.from_user.id == YOU_CHAT_ID:
        bot.reply_to(message, "ok")

load_subscribed_users()
load_reviews()

print("ok.")

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True)
